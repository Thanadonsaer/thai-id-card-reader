import { useState, useEffect } from 'react'
import './ThaiIDCardReader.css'

function ThaiIDCardReader() {
  const [isConnected, setIsConnected] = useState(false)
  const [cardData, setCardData] = useState(null)
  const [device, setDevice] = useState(null)
  const [deviceInfo, setDeviceInfo] = useState(null)
  const [isReading, setIsReading] = useState(false)
  const [error, setError] = useState('')

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ service ‡∏ó‡∏µ‡πà‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á
  const checkConflictingServices = async () => {
    try {
      setError('')
      setIsReading(true)

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö PC/SC service (Windows)
      const pcscStatus = await checkPCSCService()

      if (pcscStatus.running) {
        setError('‚ö†Ô∏è ‡∏û‡∏ö PC/SC Service ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà:\n\n' +
          'PC/SC Service ‡∏≠‡∏≤‡∏à‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏Å‡∏±‡∏ö WebUSB\n\n' +
          'üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:\n' +
          '1. ‡πÄ‡∏õ‡∏¥‡∏î Services (services.msc)\n' +
          '2. ‡∏´‡∏≤ "Smart Card"\n' +
          '3. ‡∏´‡∏¢‡∏∏‡∏î service ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß\n' +
          '4. ‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà\n\n' +
          '‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô Command Prompt:\n' +
          'net stop "Smart Card"')
      } else {
        setError('‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö PC/SC Service ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà\n\n' +
          '‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á:\n' +
          '‚Ä¢ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå\n' +
          '‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö driver ‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\n' +
          '‚Ä¢ ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ USB port ‡∏≠‡∏∑‡πà‡∏ô')
      }

    } catch (err) {
      console.error('Error checking services:', err)
      setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö service ‡πÑ‡∏î‡πâ: ' + err.message)
    } finally {
      setIsReading(false)
    }
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö PC/SC service
  const checkPCSCService = async () => {
    // ‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏à‡∏£‡∏¥‡∏á ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ API ‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
    // ‡∏ì ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ return ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    return { running: false, message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ' }
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà
  const checkConnectedDevices = async () => {
    try {
      const devices = await navigator.usb.getDevices()
      console.log('Connected USB devices:', devices)

      if (devices.length === 0) {
        setError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå USB ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà\n\n' +
          '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤:\n' +
          '‚Ä¢ ‡πÄ‡∏™‡∏µ‡∏¢‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå ZW-12027-1 ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå\n' +
          '‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≤‡∏¢‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠\n' +
          '‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô')
      } else {
        setError(`‡∏û‡∏ö ${devices.length} ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå USB ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà\n` +
          '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ')
      }
    } catch (err) {
      console.error('Error checking devices:', err)
      setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ: ' + err.message)
    }
  }

  // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå ZW-12027-1
  const connectDevice = async () => {
    try {
      setError('')
      setIsReading(true)

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (device && device.opened) {
        setError('‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡πà‡∏≠‡∏ô')
        return
      }

      // ‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå USB
      const usbDevice = await navigator.usb.requestDevice({
        filters: [] // ‡∏•‡∏ö filters ‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß
      })

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡∏∑‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (usbDevice.opened) {
        setError('‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡∏∑‡πà‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô')
        return
      }

      // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
      try {
        await usbDevice.open()
      } catch (openError) {
        console.error('Error opening device:', openError)

        if (openError.name === 'SecurityError') {
          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô localhost ‡∏´‡∏£‡∏∑‡∏≠ GitHub Pages
          const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1'
          const isGitHubPages = window.location.hostname.includes('github.io')

          let errorMessage = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ - ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò:\n\n'

          if (isGitHubPages) {
            errorMessage += 'üåê ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ GitHub Pages:\n' +
              '‚Ä¢ WebUSB ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡∏ô GitHub Pages\n' +
              '‚Ä¢ Browser ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á USB ‡∏ö‡∏ô third-party domains\n' +
              '‚Ä¢ SSL certificate ‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°\n\n' +
              '‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:\n' +
              '1. ‡∏Ñ‡∏•‡∏¥‡∏Å "‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á" ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á\n' +
              '2. ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ô: npm run dev\n' +
              '3. ‡πÄ‡∏õ‡∏¥‡∏î http://localhost:3000\n\n'
          }

          errorMessage += 'üö® ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏≠‡∏∑‡πà‡∏ô‡πÜ:\n' +
            '‚Ä¢ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡∏∑‡πà‡∏ô (PC/SC)\n' +
            '‚Ä¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\n' +
            '‚Ä¢ Driver ‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á\n\n' +
            'üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:\n' +
            '1. ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ USB\n' +
            '2. ‡∏ñ‡∏≠‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏µ‡∏¢‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà\n' +
            '3. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå\n' +
            '4. ‡πÉ‡∏ä‡πâ Chrome ‡πÅ‡∏ó‡∏ô Edge\n' +
            '5. ‡∏£‡∏±‡∏ô Browser as Administrator'

          setError(errorMessage)
          return
        }
        throw openError
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö configurations ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
      if (usbDevice.configuration === null) {
        await usbDevice.selectConfiguration(1)
      }

      await usbDevice.claimInterface(0)

      setDevice(usbDevice)
      setIsConnected(true)

      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
      const info = {
        vendorId: usbDevice.vendorId,
        productId: usbDevice.productId,
        productName: usbDevice.productName,
        manufacturerName: usbDevice.manufacturerName
      }
      setDeviceInfo(info)
      console.log('Connected device:', info)

      // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ï‡∏£
      await readCardData(usbDevice)

    } catch (err) {
      console.error('Error connecting to device:', err)

      let errorMessage = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ'

      if (err.name === 'SecurityError') {
        errorMessage = '‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò:\n\n' +
          'üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:\n' +
          '1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡∏∑‡πà‡∏ô\n' +
          '2. ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ USB (‡πÄ‡∏ä‡πà‡∏ô PC/SC, smart card readers)\n' +
          '3. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà\n' +
          '4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á USB\n' +
          '5. ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå Chrome ‡∏´‡∏£‡∏∑‡∏≠ Edge ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î'
      } else if (err.name === 'NotAllowedError') {
        errorMessage = '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:\n\n' +
          '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å "‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï" ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ñ‡∏≤‡∏°‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå'
      } else if (err.name === 'NotFoundError') {
        errorMessage = '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:\n\n' +
          '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:\n' +
          '‚Ä¢ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß\n' +
          '‚Ä¢ ‡∏™‡∏≤‡∏¢‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ä‡∏≥‡∏£‡∏∏‡∏î\n' +
          '‚Ä¢ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠'
      } else if (err.message) {
        errorMessage += ': ' + err.message
      }

      setError(errorMessage)
    } finally {
      setIsReading(false)
    }
  }

  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô
  const readCardData = async (usbDevice) => {
    try {
      // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á APDU ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÑ‡∏ó‡∏¢
      const selectFileCommand = new Uint8Array([
        0x00, 0xA4, 0x04, 0x00, 0x08, // SELECT FILE
        0xA0, 0x00, 0x00, 0x00, 0x54, 0x48, 0x00, 0x01 // AID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÑ‡∏ó‡∏¢
      ])

      await usbDevice.transferOut(1, selectFileCommand)

      // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
      const readPersonalDataCommand = new Uint8Array([
        0x00, 0xB0, 0x00, 0x00, 0x00 // READ BINARY
      ])

      const result = await usbDevice.transferIn(1, 256)
      const data = new Uint8Array(result.data.buffer)

      // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô string ‡πÅ‡∏•‡∏∞ parse
      const thaiText = new TextDecoder('tis-620').decode(data)
      const parsedData = parseThaiIDData(thaiText)

      setCardData(parsedData)

    } catch (err) {
      console.error('Error reading card data:', err)
      setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡πÑ‡∏î‡πâ: ' + err.message)
    }
  }

  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÑ‡∏ó‡∏¢
  const parseThaiIDData = (rawData) => {
    // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£ parse ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏° format ‡∏à‡∏£‡∏¥‡∏á)
    const lines = rawData.split('\n')
    return {
      citizenId: lines[0]?.trim() || '',
      thaiName: lines[1]?.trim() || '',
      englishName: lines[2]?.trim() || '',
      birthDate: lines[3]?.trim() || '',
      address: lines[4]?.trim() || '',
      issueDate: lines[5]?.trim() || '',
      expireDate: lines[6]?.trim() || ''
    }
  }

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå JSON
  const saveDataAsJSON = () => {
    if (!cardData) return

    const dataToSave = {
      ...cardData,
      deviceInfo,
      timestamp: new Date().toISOString()
    }

    const blob = new Blob([JSON.stringify(dataToSave, null, 2)], {
      type: 'application/json'
    })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `thai-id-data-${Date.now()}.json`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  // ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
  const disconnectDevice = async () => {
    if (device) {
      try {
        await device.close()
        setDevice(null)
        setIsConnected(false)
        setCardData(null)
        setDeviceInfo(null)
        setError('')
      } catch (err) {
        console.error('Error disconnecting:', err)
        setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: ' + err.message)
      }
    }
  }

  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
  const resetDevice = async () => {
    if (device) {
      try {
        setError('')
        setIsReading(true)

        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
        await device.reset()

        // ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà
        await device.close()
        await device.open()
        await device.selectConfiguration(1)
        await device.claimInterface(0)

        setError('‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡πÉ‡∏´‡∏°‡πà')

      } catch (err) {
        console.error('Error resetting device:', err)
        setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ: ' + err.message)
      } finally {
        setIsReading(false)
      }
    } else {
      setError('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà')
    }
  }

  return (
    <div className="thai-id-reader">
      <h1>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÑ‡∏ó‡∏¢</h1>
      <h2>‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: ZW-12027-1</h2>

      <div className="connection-status">
        <p>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {isConnected ? '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß' : '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠'}</p>
        {!isConnected ? (
          <div className="connection-controls">
            <button
              onClick={connectDevice}
              disabled={isReading || !navigator.usb}
              className="connect-btn"
            >
              {isReading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠...' : '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå'}
            </button>
            <button
              onClick={checkConnectedDevices}
              disabled={isReading || !navigator.usb}
              className="check-btn"
            >
              ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
            </button>
            <button
              onClick={checkConflictingServices}
              disabled={isReading || !navigator.usb}
              className="service-btn"
            >
              ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Service
            </button>
          </div>
        ) : (
          <div className="connected-controls">
            <button onClick={disconnectDevice} className="disconnect-btn">
              ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
            </button>
            <button onClick={resetDevice} disabled={isReading} className="reset-btn">
              {isReading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï...' : '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå'}
            </button>
          </div>
        )}
      </div>

      {deviceInfo && (
        <div className="device-info">
          <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h3>
          <div className="data-grid">
            <div className="data-item">
              <label>Vendor ID:</label>
              <span>0x{deviceInfo.vendorId?.toString(16).toUpperCase()}</span>
            </div>
            <div className="data-item">
              <label>Product ID:</label>
              <span>0x{deviceInfo.productId?.toString(16).toUpperCase()}</span>
            </div>
            <div className="data-item">
              <label>‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:</label>
              <span>{deviceInfo.productName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</span>
            </div>
            <div className="data-item">
              <label>‡∏ú‡∏π‡πâ‡∏ú‡∏•‡∏¥‡∏ï:</label>
              <span>{deviceInfo.manufacturerName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</span>
            </div>
          </div>
          <p className="device-note">
            <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏à‡∏î Vendor ID ‡πÅ‡∏•‡∏∞ Product ID ‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
          </p>
        </div>
      )}

      {error && (
        <div className="error-message">
          <h4>‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h4>
          <p>{error}</p>
        </div>
      )}

      {cardData && (
        <div className="card-data">
          <div className="card-header">
            <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</h3>
            <button onClick={saveDataAsJSON} className="save-btn">
              ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            </button>
          </div>
          <div className="data-grid">
            <div className="data-item">
              <label>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô:</label>
              <span>{cardData.citizenId}</span>
            </div>
            <div className="data-item">
              <label>‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢:</label>
              <span>{cardData.thaiName}</span>
            </div>
            <div className="data-item">
              <label>‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©:</label>
              <span>{cardData.englishName}</span>
            </div>
            <div className="data-item">
              <label>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î:</label>
              <span>{cardData.birthDate}</span>
            </div>
            <div className="data-item">
              <label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</label>
              <span>{cardData.address}</span>
            </div>
            <div className="data-item">
              <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£:</label>
              <span>{cardData.issueDate}</span>
            </div>
            <div className="data-item">
              <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏:</label>
              <span>{cardData.expireDate}</span>
            </div>
          </div>
        </div>
      )}

      <div className="instructions">
        <h4>‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</h4>
        <ol>
          <li>‡πÄ‡∏™‡∏µ‡∏¢‡∏ö‡∏ö‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå ZW-12027-1 ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå</li>
          <li>‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå"</li>
          <li>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á</li>
          <li>‡πÄ‡∏™‡∏µ‡∏¢‡∏ö‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏•‡∏á‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡πà‡∏≤‡∏ô</li>
          <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</li>
        </ol>
        <h4>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤:</h4>
        <ul>
          <li><strong>Access denied:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡∏∑‡πà‡∏ô</li>
          <li><strong>‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á:</strong> ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° "‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå"</li>
          <li><strong>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≤‡∏¢‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</li>
          <li><strong>‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:</strong> ‡πÉ‡∏ä‡πâ Chrome ‡∏´‡∏£‡∏∑‡∏≠ Edge ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</li>
          <li><strong>PC/SC Service:</strong> ‡∏•‡∏≠‡∏á‡∏õ‡∏¥‡∏î Smart Card Service ‡πÉ‡∏ô Windows Services</li>
        </ul>
        <div className="troubleshooting-commands">
          <h5>‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ (Windows):</h5>
          <div className="command-list">
            <code>net stop "Smart Card"</code> - ‡∏´‡∏¢‡∏∏‡∏î PC/SC Service<br/>
            <code>services.msc</code> - ‡πÄ‡∏õ‡∏¥‡∏î Windows Services<br/>
            <code>devmgmt.msc</code> - ‡πÄ‡∏õ‡∏¥‡∏î Device Manager
          </div>
        </div>
        <p><strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö WebUSB API (Chrome 61+, Edge 79+) ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡∏ô HTTPS ‡∏´‡∏£‡∏∑‡∏≠ localhost</p>
      </div>
    </div>
  )
}

export default ThaiIDCardReader
